name: Build & Release (Windows)

on:
  push:
    tags:
      - 'v*.*.*'   # билд запускается при пуше тега vX.Y.Z

jobs:
  build-win:
    runs-on: windows-latest

    # Разрешаем экшенам писать в релизы (для загрузки артефактов)
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install deps
        run: npm ci

      # Задаём переменные окружения через GITHUB_ENV,
      # вместо проблемного ${{ runner.temp }}
      - name: Prepare caches (ELECTRON_* paths)
        shell: pwsh
        run: |
          echo "ELECTRON_CACHE=$env:RUNNER_TEMP\electron-cache"      >> $env:GITHUB_ENV
          echo "ELECTRON_BUILDER_CACHE=$env:RUNNER_TEMP\electron-builder" >> $env:GITHUB_ENV
          echo "ELECTRON_MIRROR=https://github.com/electron/electron/releases/download/" >> $env:GITHUB_ENV

      # (Необязательно) если иконка лежит как PNG, собираем ICO
      # - name: Make ICO from PNG
      #   run: npx png-to-ico build/icon.png > build/icon.ico

      - name: Build & publish to GitHub Releases
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx electron-builder --win nsis portable -p always
